{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "a6343d72",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:32.577459Z",
     "iopub.status.busy": "2024-06-01T10:38:32.576607Z",
     "iopub.status.idle": "2024-06-01T10:38:33.352169Z",
     "shell.execute_reply": "2024-06-01T10:38:33.351188Z"
    },
    "papermill": {
     "duration": 0.786449,
     "end_time": "2024-06-01T10:38:33.354576",
     "exception": false,
     "start_time": "2024-06-01T10:38:32.568127",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/next-word-prediction/1661-0.txt\n",
      "/kaggle/input/next-word-prediction-sentences/my_sentences_new.txt\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6eb7bfca",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:33.369650Z",
     "iopub.status.busy": "2024-06-01T10:38:33.369263Z",
     "iopub.status.idle": "2024-06-01T10:38:33.373581Z",
     "shell.execute_reply": "2024-06-01T10:38:33.372856Z"
    },
    "papermill": {
     "duration": 0.014081,
     "end_time": "2024-06-01T10:38:33.375696",
     "exception": false,
     "start_time": "2024-06-01T10:38:33.361615",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "file = open(\"/kaggle/input/next-word-prediction-sentences/my_sentences_new.txt\",\"r\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "5b68c456",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:33.389736Z",
     "iopub.status.busy": "2024-06-01T10:38:33.389465Z",
     "iopub.status.idle": "2024-06-01T10:38:33.401644Z",
     "shell.execute_reply": "2024-06-01T10:38:33.400962Z"
    },
    "papermill": {
     "duration": 0.021442,
     "end_time": "2024-06-01T10:38:33.403606",
     "exception": false,
     "start_time": "2024-06-01T10:38:33.382164",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "text = file.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "74c0d9a6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:33.418076Z",
     "iopub.status.busy": "2024-06-01T10:38:33.417520Z",
     "iopub.status.idle": "2024-06-01T10:38:33.436324Z",
     "shell.execute_reply": "2024-06-01T10:38:33.435582Z"
    },
    "papermill": {
     "duration": 0.028124,
     "end_time": "2024-06-01T10:38:33.438263",
     "exception": false,
     "start_time": "2024-06-01T10:38:33.410139",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "file = open('/kaggle/input/next-word-prediction/1661-0.txt')\n",
    "\n",
    "text = text + '\\n' + file.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "84f9ad25",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:33.452310Z",
     "iopub.status.busy": "2024-06-01T10:38:33.452060Z",
     "iopub.status.idle": "2024-06-01T10:38:45.622101Z",
     "shell.execute_reply": "2024-06-01T10:38:45.621238Z"
    },
    "papermill": {
     "duration": 12.17984,
     "end_time": "2024-06-01T10:38:45.624547",
     "exception": false,
     "start_time": "2024-06-01T10:38:33.444707",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-06-01 10:38:35.229876: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-06-01 10:38:35.230014: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-06-01 10:38:35.369109: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    }
   ],
   "source": [
    "import tensorflow as tf\n",
    "from tensorflow.keras.preprocessing.text import Tokenizer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "5e794cc7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:45.641462Z",
     "iopub.status.busy": "2024-06-01T10:38:45.640358Z",
     "iopub.status.idle": "2024-06-01T10:38:45.863852Z",
     "shell.execute_reply": "2024-06-01T10:38:45.862882Z"
    },
    "papermill": {
     "duration": 0.233728,
     "end_time": "2024-06-01T10:38:45.866128",
     "exception": false,
     "start_time": "2024-06-01T10:38:45.632400",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10486"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tokenizer = Tokenizer()\n",
    "\n",
    "tokenizer.fit_on_texts([text])\n",
    "\n",
    "len(tokenizer.word_index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "638c8980",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:45.882683Z",
     "iopub.status.busy": "2024-06-01T10:38:45.881999Z",
     "iopub.status.idle": "2024-06-01T10:38:46.443447Z",
     "shell.execute_reply": "2024-06-01T10:38:46.442633Z"
    },
    "papermill": {
     "duration": 0.572239,
     "end_time": "2024-06-01T10:38:46.445723",
     "exception": false,
     "start_time": "2024-06-01T10:38:45.873484",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "input_sequences = []\n",
    "\n",
    "for sentence in text.split('\\n'):\n",
    "    \n",
    "    tokenized_sentences = tokenizer.texts_to_sequences([sentence])[0]\n",
    "    \n",
    "    for i in range(1,len(tokenized_sentences)):\n",
    "        input_sequences.append(tokenized_sentences[:i+1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c0e01bb0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:46.466559Z",
     "iopub.status.busy": "2024-06-01T10:38:46.465916Z",
     "iopub.status.idle": "2024-06-01T10:38:46.472639Z",
     "shell.execute_reply": "2024-06-01T10:38:46.471752Z"
    },
    "papermill": {
     "duration": 0.017965,
     "end_time": "2024-06-01T10:38:46.474619",
     "exception": false,
     "start_time": "2024-06-01T10:38:46.456654",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[4, 586],\n",
       " [4, 586, 32],\n",
       " [4, 586, 32, 3677],\n",
       " [4, 586, 32, 3677, 2775],\n",
       " [4, 586, 32, 3677, 2775, 7]]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "input_sequences[:5]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e76ddfd4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:46.489477Z",
     "iopub.status.busy": "2024-06-01T10:38:46.488726Z",
     "iopub.status.idle": "2024-06-01T10:38:46.507681Z",
     "shell.execute_reply": "2024-06-01T10:38:46.506794Z"
    },
    "papermill": {
     "duration": 0.028415,
     "end_time": "2024-06-01T10:38:46.509709",
     "exception": false,
     "start_time": "2024-06-01T10:38:46.481294",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "max_len = max([len(x) for x in input_sequences])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "12c0f35c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:46.525354Z",
     "iopub.status.busy": "2024-06-01T10:38:46.524865Z",
     "iopub.status.idle": "2024-06-01T10:38:47.159326Z",
     "shell.execute_reply": "2024-06-01T10:38:47.158363Z"
    },
    "papermill": {
     "duration": 0.644332,
     "end_time": "2024-06-01T10:38:47.161782",
     "exception": false,
     "start_time": "2024-06-01T10:38:46.517450",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras.preprocessing.sequence import pad_sequences\n",
    "\n",
    "padded_input_sequences = pad_sequences(input_sequences , maxlen = max_len , padding = 'pre')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "1aaa6f00",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:47.178041Z",
     "iopub.status.busy": "2024-06-01T10:38:47.177489Z",
     "iopub.status.idle": "2024-06-01T10:38:47.182031Z",
     "shell.execute_reply": "2024-06-01T10:38:47.181065Z"
    },
    "papermill": {
     "duration": 0.014617,
     "end_time": "2024-06-01T10:38:47.184106",
     "exception": false,
     "start_time": "2024-06-01T10:38:47.169489",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = padded_input_sequences[:,:-1]\n",
    "\n",
    "y = padded_input_sequences[:,-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "2783eb2e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:47.199070Z",
     "iopub.status.busy": "2024-06-01T10:38:47.198583Z",
     "iopub.status.idle": "2024-06-01T10:38:47.204069Z",
     "shell.execute_reply": "2024-06-01T10:38:47.203282Z"
    },
    "papermill": {
     "duration": 0.014867,
     "end_time": "2024-06-01T10:38:47.206001",
     "exception": false,
     "start_time": "2024-06-01T10:38:47.191134",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((147066, 20), (147066,))"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.shape , y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d50bc1ae",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:47.220710Z",
     "iopub.status.busy": "2024-06-01T10:38:47.220246Z",
     "iopub.status.idle": "2024-06-01T10:38:47.606490Z",
     "shell.execute_reply": "2024-06-01T10:38:47.605546Z"
    },
    "papermill": {
     "duration": 0.396187,
     "end_time": "2024-06-01T10:38:47.608945",
     "exception": false,
     "start_time": "2024-06-01T10:38:47.212758",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras.utils import to_categorical\n",
    "y = to_categorical(y,num_classes=10487)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "225468d7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:47.625565Z",
     "iopub.status.busy": "2024-06-01T10:38:47.624869Z",
     "iopub.status.idle": "2024-06-01T10:38:47.631798Z",
     "shell.execute_reply": "2024-06-01T10:38:47.630883Z"
    },
    "papermill": {
     "duration": 0.017075,
     "end_time": "2024-06-01T10:38:47.633939",
     "exception": false,
     "start_time": "2024-06-01T10:38:47.616864",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras.models import Sequential\n",
    "from tensorflow.keras.layers import Embedding, LSTM, Dense"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "0d1aa848",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:47.650312Z",
     "iopub.status.busy": "2024-06-01T10:38:47.649657Z",
     "iopub.status.idle": "2024-06-01T10:38:48.479036Z",
     "shell.execute_reply": "2024-06-01T10:38:48.478035Z"
    },
    "papermill": {
     "duration": 0.839371,
     "end_time": "2024-06-01T10:38:48.481323",
     "exception": false,
     "start_time": "2024-06-01T10:38:47.641952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/layers/core/embedding.py:90: UserWarning: Argument `input_length` is deprecated. Just remove it.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "model = Sequential()\n",
    "model.add(Embedding(10487, 100, input_length=20))\n",
    "model.add(LSTM(150, return_sequences=True))\n",
    "model.add(LSTM(150))\n",
    "model.add(Dense(10487, activation='softmax'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "301a85af",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:48.497249Z",
     "iopub.status.busy": "2024-06-01T10:38:48.496477Z",
     "iopub.status.idle": "2024-06-01T10:38:48.517913Z",
     "shell.execute_reply": "2024-06-01T10:38:48.517140Z"
    },
    "papermill": {
     "duration": 0.031262,
     "end_time": "2024-06-01T10:38:48.519761",
     "exception": false,
     "start_time": "2024-06-01T10:38:48.488499",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6ff5abb0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:48.535050Z",
     "iopub.status.busy": "2024-06-01T10:38:48.534387Z",
     "iopub.status.idle": "2024-06-01T10:38:48.552125Z",
     "shell.execute_reply": "2024-06-01T10:38:48.551266Z"
    },
    "papermill": {
     "duration": 0.027509,
     "end_time": "2024-06-01T10:38:48.554117",
     "exception": false,
     "start_time": "2024-06-01T10:38:48.526608",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ embedding (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)           │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                     │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ lstm_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                   │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ embedding (\u001b[38;5;33mEmbedding\u001b[0m)           │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ lstm (\u001b[38;5;33mLSTM\u001b[0m)                     │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ lstm_1 (\u001b[38;5;33mLSTM\u001b[0m)                   │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "222a814f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T10:38:48.571013Z",
     "iopub.status.busy": "2024-06-01T10:38:48.570559Z",
     "iopub.status.idle": "2024-06-01T11:41:55.273614Z",
     "shell.execute_reply": "2024-06-01T11:41:55.272558Z"
    },
    "papermill": {
     "duration": 3786.714154,
     "end_time": "2024-06-01T11:41:55.275950",
     "exception": false,
     "start_time": "2024-06-01T10:38:48.561796",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m67s\u001b[0m 14ms/step - accuracy: 0.0589 - loss: 6.7836\n",
      "Epoch 2/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.1215 - loss: 5.5677\n",
      "Epoch 3/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.1650 - loss: 5.0105\n",
      "Epoch 4/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.1999 - loss: 4.6016\n",
      "Epoch 5/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.2213 - loss: 4.3130\n",
      "Epoch 6/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.2429 - loss: 4.0470\n",
      "Epoch 7/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.2613 - loss: 3.8285\n",
      "Epoch 8/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.2783 - loss: 3.6273\n",
      "Epoch 9/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.2932 - loss: 3.4579\n",
      "Epoch 10/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.3106 - loss: 3.2988\n",
      "Epoch 11/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.3304 - loss: 3.1428\n",
      "Epoch 12/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.3497 - loss: 3.0082\n",
      "Epoch 13/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.3691 - loss: 2.8872\n",
      "Epoch 14/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.3861 - loss: 2.7683\n",
      "Epoch 15/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.4024 - loss: 2.6690\n",
      "Epoch 16/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.4169 - loss: 2.5697\n",
      "Epoch 17/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.4342 - loss: 2.4811\n",
      "Epoch 18/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.4514 - loss: 2.3813\n",
      "Epoch 19/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.4654 - loss: 2.3105\n",
      "Epoch 20/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.4794 - loss: 2.2290\n",
      "Epoch 21/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.4923 - loss: 2.1643\n",
      "Epoch 22/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m64s\u001b[0m 14ms/step - accuracy: 0.5055 - loss: 2.1004\n",
      "Epoch 23/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m64s\u001b[0m 14ms/step - accuracy: 0.5189 - loss: 2.0285\n",
      "Epoch 24/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.5327 - loss: 1.9631\n",
      "Epoch 25/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.5453 - loss: 1.9028\n",
      "Epoch 26/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.5554 - loss: 1.8501\n",
      "Epoch 27/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.5666 - loss: 1.7969\n",
      "Epoch 28/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.5750 - loss: 1.7501\n",
      "Epoch 29/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.5848 - loss: 1.7030\n",
      "Epoch 30/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.5932 - loss: 1.6607\n",
      "Epoch 31/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.6035 - loss: 1.6146\n",
      "Epoch 32/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.6122 - loss: 1.5733\n",
      "Epoch 33/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.6244 - loss: 1.5283\n",
      "Epoch 34/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.6302 - loss: 1.4947\n",
      "Epoch 35/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.6389 - loss: 1.4527\n",
      "Epoch 36/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.6450 - loss: 1.4263\n",
      "Epoch 37/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.6529 - loss: 1.3889\n",
      "Epoch 38/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.6588 - loss: 1.3649\n",
      "Epoch 39/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.6651 - loss: 1.3312\n",
      "Epoch 40/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.6705 - loss: 1.3084\n",
      "Epoch 41/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.6762 - loss: 1.2769\n",
      "Epoch 42/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.6824 - loss: 1.2511\n",
      "Epoch 43/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.6859 - loss: 1.2275\n",
      "Epoch 44/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.6947 - loss: 1.2030\n",
      "Epoch 45/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.6961 - loss: 1.1812\n",
      "Epoch 46/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.7021 - loss: 1.1672\n",
      "Epoch 47/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.7059 - loss: 1.1454\n",
      "Epoch 48/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.7139 - loss: 1.1174\n",
      "Epoch 49/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.7182 - loss: 1.0925\n",
      "Epoch 50/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.7221 - loss: 1.0822\n",
      "Epoch 51/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 13ms/step - accuracy: 0.7251 - loss: 1.0629\n",
      "Epoch 52/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m82s\u001b[0m 14ms/step - accuracy: 0.7287 - loss: 1.0466\n",
      "Epoch 53/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.7308 - loss: 1.0379\n",
      "Epoch 54/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.7340 - loss: 1.0192\n",
      "Epoch 55/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.7365 - loss: 1.0074\n",
      "Epoch 56/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.7416 - loss: 0.9876\n",
      "Epoch 57/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.7432 - loss: 0.9791\n",
      "Epoch 58/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.7440 - loss: 0.9693\n",
      "Epoch 59/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m63s\u001b[0m 14ms/step - accuracy: 0.7488 - loss: 0.9536\n",
      "Epoch 60/60\n",
      "\u001b[1m4596/4596\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m62s\u001b[0m 14ms/step - accuracy: 0.7525 - loss: 0.9379\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.history.History at 0x7de1a578f070>"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(X,y,epochs=60)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "058d7fdc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T11:42:07.255750Z",
     "iopub.status.busy": "2024-06-01T11:42:07.255407Z",
     "iopub.status.idle": "2024-06-01T11:42:28.165256Z",
     "shell.execute_reply": "2024-06-01T11:42:28.164450Z"
    },
    "papermill": {
     "duration": 26.950387,
     "end_time": "2024-06-01T11:42:28.167587",
     "exception": false,
     "start_time": "2024-06-01T11:42:01.217200",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 205ms/step\n",
      "I look forward to\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n",
      "I look forward to discussing\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "I look forward to discussing potential\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "I look forward to discussing potential strategies\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step\n",
      "I look forward to discussing potential strategies for\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 20ms/step\n",
      "I look forward to discussing potential strategies for the\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 22ms/step\n",
      "I look forward to discussing potential strategies for the environment\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "I look forward to discussing potential strategies for the environment of\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "I look forward to discussing potential strategies for the environment of continuous\n",
      "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 21ms/step\n",
      "I look forward to discussing potential strategies for the environment of continuous learning\n"
     ]
    }
   ],
   "source": [
    "import time\n",
    "text = \"I look forward\"\n",
    "\n",
    "for i in range(10):\n",
    "  # tokenize\n",
    "  token_text = tokenizer.texts_to_sequences([text])[0]\n",
    "  # padding\n",
    "  padded_token_text = pad_sequences([token_text], maxlen=56, padding='pre')\n",
    "  # predict\n",
    "  pos = np.argmax(model.predict(padded_token_text))\n",
    "\n",
    "  for word,index in tokenizer.word_index.items():\n",
    "    if index == pos:\n",
    "      text = text + \" \" + word\n",
    "      print(text)\n",
    "      time.sleep(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "62d80f2f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-06-01T11:42:40.362398Z",
     "iopub.status.busy": "2024-06-01T11:42:40.362027Z",
     "iopub.status.idle": "2024-06-01T11:42:40.524596Z",
     "shell.execute_reply": "2024-06-01T11:42:40.523569Z"
    },
    "papermill": {
     "duration": 6.361654,
     "end_time": "2024-06-01T11:42:40.527080",
     "exception": false,
     "start_time": "2024-06-01T11:42:34.165426",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model.save('/kaggle/working/wordpredictor.keras') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "720e74f9",
   "metadata": {
    "papermill": {
     "duration": 6.073892,
     "end_time": "2024-06-01T11:42:52.542632",
     "exception": false,
     "start_time": "2024-06-01T11:42:46.468740",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 4403486,
     "sourceId": 7562554,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 2389252,
     "sourceId": 4032467,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30716,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 3871.013544,
   "end_time": "2024-06-01T11:43:00.647560",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-06-01T10:38:29.634016",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
