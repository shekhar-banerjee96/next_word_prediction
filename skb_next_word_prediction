{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":4032467,"sourceType":"datasetVersion","datasetId":2389252},{"sourceId":7562554,"sourceType":"datasetVersion","datasetId":4403486}],"dockerImageVersionId":30716,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/shekharbanerjee/skb-next-word-prediction?scriptVersionId=180892820\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-01T09:11:24.361743Z","iopub.execute_input":"2024-06-01T09:11:24.362116Z","iopub.status.idle":"2024-06-01T09:11:24.370565Z","shell.execute_reply.started":"2024-06-01T09:11:24.362087Z","shell.execute_reply":"2024-06-01T09:11:24.369569Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"file = open(\"/kaggle/input/next-word-prediction-sentences/my_sentences_new.txt\",\"r\")","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:11:24.37476Z","iopub.execute_input":"2024-06-01T09:11:24.375034Z","iopub.status.idle":"2024-06-01T09:11:24.379801Z","shell.execute_reply.started":"2024-06-01T09:11:24.375012Z","shell.execute_reply":"2024-06-01T09:11:24.378916Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"text = file.read()","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:11:24.391956Z","iopub.execute_input":"2024-06-01T09:11:24.39222Z","iopub.status.idle":"2024-06-01T09:11:24.397914Z","shell.execute_reply.started":"2024-06-01T09:11:24.392197Z","shell.execute_reply":"2024-06-01T09:11:24.396787Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"file = open('/kaggle/input/next-word-prediction/1661-0.txt')\n\ntext = text + '\\n' + file.read()","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:11:24.399348Z","iopub.execute_input":"2024-06-01T09:11:24.399618Z","iopub.status.idle":"2024-06-01T09:11:24.408863Z","shell.execute_reply.started":"2024-06-01T09:11:24.399595Z","shell.execute_reply":"2024-06-01T09:11:24.408049Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import tensorflow as tf\nfrom tensorflow.keras.preprocessing.text import Tokenizer","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:11:24.413911Z","iopub.execute_input":"2024-06-01T09:11:24.414145Z","iopub.status.idle":"2024-06-01T09:11:24.418121Z","shell.execute_reply.started":"2024-06-01T09:11:24.414125Z","shell.execute_reply":"2024-06-01T09:11:24.417237Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"tokenizer = Tokenizer()\n\ntokenizer.fit_on_texts([text])\n\nlen(tokenizer.word_index)","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:13:59.804366Z","iopub.execute_input":"2024-06-01T09:13:59.804726Z","iopub.status.idle":"2024-06-01T09:14:00.000745Z","shell.execute_reply.started":"2024-06-01T09:13:59.8047Z","shell.execute_reply":"2024-06-01T09:13:59.999861Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"input_sequences = []\n\nfor sentence in text.split('\\n'):\n    \n    tokenized_sentences = tokenizer.texts_to_sequences([sentence])[0]\n    \n    for i in range(1,len(tokenized_sentences)):\n        input_sequences.append(tokenized_sentences[:i+1])","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:04.733684Z","iopub.execute_input":"2024-06-01T09:14:04.734048Z","iopub.status.idle":"2024-06-01T09:14:05.080848Z","shell.execute_reply.started":"2024-06-01T09:14:04.734019Z","shell.execute_reply":"2024-06-01T09:14:05.080033Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"input_sequences[:5]","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:06.84856Z","iopub.execute_input":"2024-06-01T09:14:06.849509Z","iopub.status.idle":"2024-06-01T09:14:06.856311Z","shell.execute_reply.started":"2024-06-01T09:14:06.849466Z","shell.execute_reply":"2024-06-01T09:14:06.855468Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"max_len = max([len(x) for x in input_sequences])","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:08.728336Z","iopub.execute_input":"2024-06-01T09:14:08.728714Z","iopub.status.idle":"2024-06-01T09:14:08.749463Z","shell.execute_reply.started":"2024-06-01T09:14:08.728686Z","shell.execute_reply":"2024-06-01T09:14:08.748505Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from tensorflow.keras.preprocessing.sequence import pad_sequences\n\npadded_input_sequences = pad_sequences(input_sequences , maxlen = max_len , padding = 'pre')","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:09.738175Z","iopub.execute_input":"2024-06-01T09:14:09.738549Z","iopub.status.idle":"2024-06-01T09:14:10.308093Z","shell.execute_reply.started":"2024-06-01T09:14:09.738521Z","shell.execute_reply":"2024-06-01T09:14:10.307029Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X = padded_input_sequences[:,:-1]\n\ny = padded_input_sequences[:,-1]","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:10.520456Z","iopub.execute_input":"2024-06-01T09:14:10.520808Z","iopub.status.idle":"2024-06-01T09:14:10.525909Z","shell.execute_reply.started":"2024-06-01T09:14:10.520779Z","shell.execute_reply":"2024-06-01T09:14:10.524776Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X.shape , y.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:11.20396Z","iopub.execute_input":"2024-06-01T09:14:11.204738Z","iopub.status.idle":"2024-06-01T09:14:11.210637Z","shell.execute_reply.started":"2024-06-01T09:14:11.204708Z","shell.execute_reply":"2024-06-01T09:14:11.209685Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from tensorflow.keras.utils import to_categorical\ny = to_categorical(y,num_classes=10487)","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:19.968182Z","iopub.execute_input":"2024-06-01T09:14:19.969075Z","iopub.status.idle":"2024-06-01T09:14:20.338663Z","shell.execute_reply.started":"2024-06-01T09:14:19.969043Z","shell.execute_reply":"2024-06-01T09:14:20.337428Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"from tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Embedding, LSTM, Dense","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:36.179083Z","iopub.execute_input":"2024-06-01T09:14:36.179467Z","iopub.status.idle":"2024-06-01T09:14:36.184532Z","shell.execute_reply.started":"2024-06-01T09:14:36.179435Z","shell.execute_reply":"2024-06-01T09:14:36.183348Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model = Sequential()\nmodel.add(Embedding(10487, 100, input_length=20))\nmodel.add(LSTM(150, return_sequences=True))\nmodel.add(LSTM(150))\nmodel.add(Dense(10487, activation='softmax'))","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:36.634207Z","iopub.execute_input":"2024-06-01T09:14:36.634594Z","iopub.status.idle":"2024-06-01T09:14:36.655933Z","shell.execute_reply.started":"2024-06-01T09:14:36.634563Z","shell.execute_reply":"2024-06-01T09:14:36.655074Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:39.489435Z","iopub.execute_input":"2024-06-01T09:14:39.489774Z","iopub.status.idle":"2024-06-01T09:14:39.499138Z","shell.execute_reply.started":"2024-06-01T09:14:39.489748Z","shell.execute_reply":"2024-06-01T09:14:39.49834Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.summary()","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:14:40.628119Z","iopub.execute_input":"2024-06-01T09:14:40.628494Z","iopub.status.idle":"2024-06-01T09:14:40.646024Z","shell.execute_reply.started":"2024-06-01T09:14:40.628465Z","shell.execute_reply":"2024-06-01T09:14:40.645178Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.fit(X,y,epochs=60)","metadata":{"execution":{"iopub.status.busy":"2024-06-01T09:19:28.099685Z","iopub.execute_input":"2024-06-01T09:19:28.100048Z","iopub.status.idle":"2024-06-01T10:20:45.608282Z","shell.execute_reply.started":"2024-06-01T09:19:28.100019Z","shell.execute_reply":"2024-06-01T10:20:45.607173Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"import time\ntext = \"I look forward\"\n\nfor i in range(10):\n  # tokenize\n  token_text = tokenizer.texts_to_sequences([text])[0]\n  # padding\n  padded_token_text = pad_sequences([token_text], maxlen=56, padding='pre')\n  # predict\n  pos = np.argmax(model.predict(padded_token_text))\n\n  for word,index in tokenizer.word_index.items():\n    if index == pos:\n      text = text + \" \" + word\n      print(text)\n      time.sleep(2)","metadata":{"execution":{"iopub.status.busy":"2024-06-01T10:20:45.610573Z","iopub.execute_input":"2024-06-01T10:20:45.610958Z","iopub.status.idle":"2024-06-01T10:21:06.452968Z","shell.execute_reply.started":"2024-06-01T10:20:45.610926Z","shell.execute_reply":"2024-06-01T10:21:06.452116Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"model.save('/kaggle/working/wordpredictor.keras') ","metadata":{"execution":{"iopub.status.busy":"2024-06-01T10:21:06.454449Z","iopub.execute_input":"2024-06-01T10:21:06.454759Z","iopub.status.idle":"2024-06-01T10:21:06.610221Z","shell.execute_reply.started":"2024-06-01T10:21:06.454734Z","shell.execute_reply":"2024-06-01T10:21:06.609454Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}